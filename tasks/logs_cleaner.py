import asyncio
import os
import time

async def auto_clean_logs(logs_folder: str = "logs", days_to_keep: int = 7):
    while True:
        try:
            print("üßπ –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è...")

            if not os.path.exists(logs_folder):
                print(f"‚ùó –ü–∞–ø–∫–∞ {logs_folder} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            else:
                now = time.time()
                cutoff = now - (days_to_keep * 86400)  # 86400 —Å–µ–∫—É–Ω–¥ = 1 –¥–µ–Ω—å

                for filename in os.listdir(logs_folder):
                    filepath = os.path.join(logs_folder, filename)
                    if os.path.isfile(filepath):
                        file_mtime = os.path.getmtime(filepath)
                        if file_mtime < cutoff:
                            os.remove(filepath)
                            print(f"üóë –£–¥–∞–ª—ë–Ω —Å—Ç–∞—Ä—ã–π –ª–æ–≥: {filename}")

            print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤: {e}")

        await asyncio.sleep(86400)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
