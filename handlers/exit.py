from aiogram import Router, types, F
from handlers.start import authorized_users
from utils.logger import log_info
from database.models import log_action

router = Router()

@router.message(F.text == "–í—ã—Ö–æ–¥")
async def exit_session(message: types.Message):
    user_id = message.from_user.id

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, —É–±–∏—Ä–∞–µ–º –µ–≥–æ
    if authorized_users.get(user_id):
        parent_info = authorized_users.pop(user_id)
        log_info(f"User {user_id} ({parent_info['parent_name']}) –≤—ã—à–µ–ª –∏–∑ —Å–∏—Å—Ç–µ–º—ã.")
        log_action(user_id, "–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã", f"–§–ò–û —Ä–æ–¥–∏—Ç–µ–ª—è: {parent_info['parent_name']}")
        await message.answer("üîö –í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã. –ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –≤–≤–µ–¥–∏—Ç–µ /start.")
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –±—ã–ª –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
        log_info(f"User {user_id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –≤—ã–π—Ç–∏ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.")
        await message.answer("‚ÑπÔ∏è –í—ã –Ω–µ –±—ã–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É, –≤–≤–µ–¥–∏—Ç–µ /start.")
